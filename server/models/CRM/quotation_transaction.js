module.exports = (sequelize, DataTypes) => {
  const QuotationTransaction = sequelize.define("QuotationTransaction", {
    quotation_id: DataTypes.INTEGER,
    category_id: DataTypes.INTEGER,
    product_id: DataTypes.INTEGER,
    product_specification_id: DataTypes.INTEGER,
    formula_id: DataTypes.INTEGER,
    level_id: DataTypes.INTEGER,
    inquiry_type: DataTypes.STRING,
    project_wise: DataTypes.STRING,
    product_description: DataTypes.TEXT,
    product_specification: DataTypes.TEXT,
    other_product_description: DataTypes.TEXT,
    item_class: DataTypes.STRING,
    product_unit_id: DataTypes.INTEGER,
    product_quantity: DataTypes.DECIMAL(10, 2),
    product_base_unit_id: DataTypes.INTEGER,
    product_base_quantity: DataTypes.DECIMAL(10, 2),
    product_converted_unit_id: DataTypes.INTEGER,
    product_converted_quantity: DataTypes.DECIMAL(10, 2),
    unit_wise: DataTypes.STRING,
    product_rate: DataTypes.DECIMAL(10, 2),
    product_converted_rate: DataTypes.DECIMAL(10, 2),
    discount_percentage: DataTypes.DECIMAL(10, 2),
    discount_amount: DataTypes.DECIMAL(10, 2),
    discount_converted_amount: DataTypes.DECIMAL(10, 2),
    product_amount: DataTypes.DECIMAL(10, 2),
    product_converted_amount: DataTypes.DECIMAL(10, 2),
    cgst_percentage: DataTypes.DECIMAL(10, 2),
    cgst_rate: DataTypes.DECIMAL(10, 2),
    cgst_converted_rate: DataTypes.DECIMAL(10, 2),
    sgst_percentage: DataTypes.DECIMAL(10, 2),
    sgst_rate: DataTypes.DECIMAL(10, 2),
    sgst_converted_rate: DataTypes.DECIMAL(10, 2),
    igst_percentage: DataTypes.DECIMAL(10, 2),
    igst_rate: DataTypes.DECIMAL(10, 2),
    igst_converted_rate: DataTypes.DECIMAL(10, 2),
    product_tax_category: DataTypes.STRING,
    product_total: DataTypes.DECIMAL(10, 2),
    product_converted_total: DataTypes.DECIMAL(10, 2),
    budget_transaction_total: DataTypes.DECIMAL(10, 2),
    budget_margin_percent: DataTypes.DECIMAL(10, 2),
    budget_margin_amount: DataTypes.DECIMAL(10, 2),
    budget_grand_total: DataTypes.DECIMAL(10, 2),
    with_bom_flag: DataTypes.BOOLEAN,
    actual_amount_flag: DataTypes.BOOLEAN,
    quotation_transaction_status: DataTypes.INTEGER,
    invoice_done_status: DataTypes.INTEGER,
    sales_order_status: DataTypes.INTEGER,
    currency_id: DataTypes.INTEGER,
    currency_rate: DataTypes.DECIMAL(10, 4),
    bom_version_id: DataTypes.INTEGER,
    user_id: DataTypes.INTEGER,
    company_id: DataTypes.INTEGER,
    branch_id: DataTypes.INTEGER,
    status: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
    }
  }, {
    tableName: "quotation_transaction",
    timestamps: true,
    createdAt: "created_at",
    updatedAt: "updated_at"
  });

  return QuotationTransaction;
};
