module.exports = (sequelize, DataTypes) => {
  const Quotation = sequelize.define("Quotation", {
    quotation_no: DataTypes.STRING,
    quotation_date: DataTypes.DATE,
    company_id: DataTypes.INTEGER,
    contact_person_id: DataTypes.INTEGER,
    inquiry_ref_id: DataTypes.INTEGER,
    subject: DataTypes.STRING,
    product_up_to: DataTypes.STRING,
    valid_till_date: DataTypes.DATE,
    quotation_referance: DataTypes.STRING,
    payment_terms: DataTypes.STRING,
    quotation_type: DataTypes.STRING,
    task_id: DataTypes.INTEGER,
    assign_to: DataTypes.INTEGER,
    priority: DataTypes.STRING,
    follow_up_date: DataTypes.DATE,
    currency_converter: DataTypes.BOOLEAN,
    currency_converter_id: DataTypes.INTEGER,
    currency_rate: DataTypes.FLOAT,
    gst_type: DataTypes.STRING,
    delivery_type: DataTypes.STRING,
    delivery_date: DataTypes.DATE,
    transport_name: DataTypes.INTEGER,
    transport_address: DataTypes.TEXT,
    quotation_revise_type: DataTypes.INTEGER,
    installation_charges: DataTypes.BOOLEAN,
    quotation_type_name: DataTypes.STRING,
    net_amount: DataTypes.FLOAT,
    net_total_converted: DataTypes.FLOAT,
    discount_percentage: DataTypes.FLOAT,
    discount_amount: DataTypes.FLOAT,
    grand_total: DataTypes.FLOAT,
    grand_total_converted: DataTypes.FLOAT,
    installation_type: DataTypes.BOOLEAN,
    paid_amount: DataTypes.FLOAT,
    remark: DataTypes.TEXT,
    quotation_header: DataTypes.TEXT,
    quotation_footer: DataTypes.TEXT,
    annexuer_id: DataTypes.INTEGER,
    annexuer_content: DataTypes.TEXT,
    quotation_address: DataTypes.TEXT,
    quotation_status: DataTypes.STRING,
    revise_status: DataTypes.INTEGER,
    start_quotation_id: DataTypes.INTEGER,
    previous_quotation_id: DataTypes.INTEGER,
    approval_status: DataTypes.STRING,
    po_approval_status: DataTypes.STRING,
    order_approval_status: DataTypes.STRING,
    payment_approval_status: DataTypes.STRING,
    dispatch_status: DataTypes.STRING,
    dispatch_remark: DataTypes.TEXT,
    dispatch_date: DataTypes.DATE,
    quotation_po_number: DataTypes.STRING,
    quotation_po_date: DataTypes.DATE,
    quotation_delivery_date: DataTypes.DATE,
    quotation_po_amount: DataTypes.FLOAT,
    quotation_po_attachment: DataTypes.STRING,
    quotation_order_confirmation_attachment: DataTypes.STRING,
    quotation_company_name: DataTypes.STRING,
    quotation_company_mobile_no: DataTypes.STRING,
    quotation_company_gst_no: DataTypes.STRING,
    quotation_company_address: DataTypes.TEXT,
    quotation_address_country: DataTypes.STRING,
    quotation_address_state: DataTypes.STRING,
    quotation_address_city: DataTypes.STRING,
    payment_method_id: DataTypes.INTEGER,
    with_bom_flag: DataTypes.BOOLEAN,
    location_id: DataTypes.INTEGER,
    invoice_done_status: DataTypes.STRING,
    quotation_won_by_user_id: DataTypes.INTEGER,
    general_terms_conditions_content: DataTypes.TEXT,
    quotation_greeting: DataTypes.STRING,
    delivery_number: DataTypes.STRING,
    order_number: DataTypes.STRING,
    delivery_from: DataTypes.STRING,
    po_addressed_to: DataTypes.STRING,
    project_name: DataTypes.STRING,
    gst_type_id: DataTypes.INTEGER,
    sales_order_id: DataTypes.INTEGER,
    sales_order_status: DataTypes.STRING,
    terms_type: DataTypes.STRING,
    quotation_task_id: DataTypes.INTEGER,
    transaction_id: DataTypes.INTEGER,
    transaction_address_id: DataTypes.INTEGER,
    payment_terms_text: DataTypes.STRING,
    payment_terms_id: DataTypes.INTEGER,
    mode_of_dispatch: DataTypes.STRING,
    destination: DataTypes.STRING,
    user_id: DataTypes.INTEGER,
    branch_id: DataTypes.INTEGER,
    company_id_ref: DataTypes.INTEGER,
    status: {
      type: DataTypes.INTEGER,
      defaultValue: 0
    }
  }, {
    tableName: "quotation",
    timestamps: true,
    createdAt: "created_at",
    updatedAt: "updated_at"
  });

  return Quotation;
};
