module.exports = (sequelize, DataTypes) => {
  const Quotation = sequelize.define("Quotation", {
    task_id: { type: DataTypes.INTEGER },
    quotation_no: { type: DataTypes.STRING(100) },
    quotation_date: { type: DataTypes.DATEONLY },
    contact_person_id: { type: DataTypes.INTEGER },
    inquiry_ref_id: { type: DataTypes.INTEGER },
    subject: { type: DataTypes.STRING(255) },
    product_upto: { type: DataTypes.STRING(255) },
    valid_till_date: { type: DataTypes.DATEONLY },
    assign_to: { type: DataTypes.INTEGER },
    priority: { type: DataTypes.STRING(50) },
    follow_up_date: { type: DataTypes.DATEONLY },
    currency_converter: { type: DataTypes.TINYINT, comment: "0: No, 1: Yes" },
    currency_master_id: { type: DataTypes.INTEGER, comment: "Currency Master ID" },
    currency_rate: { type: DataTypes.DECIMAL(10, 4) },
    gst_type: { type: DataTypes.STRING(50) },
    transport_name: { type: DataTypes.INTEGER, comment: "Transporter Master ID" },
    transport_address: { type: DataTypes.STRING(255) },
    installation_charges: { type: DataTypes.TINYINT, defaultValue: 0, comment: "0: No, 1: Yes" },
    net_amount: { type: DataTypes.DECIMAL(12, 2) },
    net_total_converted: { type: DataTypes.DECIMAL(12, 2) },
    discount_percentage: { type: DataTypes.DECIMAL(5, 2) },
    discount_amount: { type: DataTypes.DECIMAL(12, 2) },
    grand_total: { type: DataTypes.DECIMAL(12, 2) },
    grand_total_converted: { type: DataTypes.DECIMAL(12, 2) },
    installation_type: { type: DataTypes.TINYINT, defaultValue: 0, comment: "0: No, 1: Yes" },
    paid_amount: { type: DataTypes.DECIMAL(12, 2) },
    remark: { type: DataTypes.TEXT },
    annexuer_id: { type: DataTypes.INTEGER, comment: "Annexure Master" },
    annexuer_content: { type: DataTypes.TEXT },
    previous_quotation_id: { type: DataTypes.INTEGER },
    dispatch_remark: { type: DataTypes.STRING(255) },
    dispatch_date: { type: DataTypes.DATEONLY },
    start_quotation_id: { type: DataTypes.INTEGER },
    quotation_address: { type: DataTypes.STRING(255) },
    quotation_reference: { type: DataTypes.STRING(255) },
    quotation_type: { type: DataTypes.STRING(50), comment: "Inquiry / PO / Etc." },
    quotation_task_id: { type: DataTypes.INTEGER },
    quotation_header: { type: DataTypes.TEXT },
    quotation_footer: { type: DataTypes.TEXT },
    quotation_revise_type: { type: DataTypes.TINYINT, defaultValue: 0, comment: "0: No, 1: Yes" },
    quotation_po_number: { type: DataTypes.STRING(100) },
    quotation_po_date: { type: DataTypes.DATEONLY },
    quotation_delivery_date: { type: DataTypes.DATEONLY },
    quotation_po_amount: { type: DataTypes.DECIMAL(12, 2) },
    quotation_po_attachment: { type: DataTypes.STRING(255) },
    quotation_order_confirmation_attachment: { type: DataTypes.STRING(255) },
    quotation_company_name: { type: DataTypes.STRING(255) },
    quotation_company_mobile_no: { type: DataTypes.STRING(20) },
    quotation_company_gst_no: { type: DataTypes.STRING(50) },
    quotation_company_address: { type: DataTypes.STRING(255) },
    quotation_address_country: { type: DataTypes.STRING(100) },
    quotation_address_state: { type: DataTypes.STRING(100) },
    quotation_address_city: { type: DataTypes.STRING(100) },
    quotation_greeting: { type: DataTypes.TEXT },
    quotation_won_by_user_id: { type: DataTypes.INTEGER },
    with_bom_flag: { type: DataTypes.TINYINT, defaultValue: 0, comment: "0: No, 1: Yes" },
    location_id: { type: DataTypes.INTEGER },
    invoice_done_status: { type: DataTypes.STRING(50) },
    general_terms_conditions: { type: DataTypes.TEXT },
    terms_type: { type: DataTypes.STRING(50) },
    order_number: { type: DataTypes.STRING(100) },
    delivery_type: { type: DataTypes.STRING(50), comment: "Quotation Wise / Product Wise" },
    delivery_date: { type: DataTypes.DATEONLY },
    delivery_number: { type: DataTypes.STRING(100) },
    delivery_from: { type: DataTypes.STRING(255) },
    po_addressed_to: { type: DataTypes.STRING(255) },
    project_name: { type: DataTypes.STRING(255) },
    mode_of_dispatch: { type: DataTypes.STRING(100) },
    destination: { type: DataTypes.STRING(100) },
    sales_order_id: { type: DataTypes.INTEGER },
    sales_order_status: { type: DataTypes.STRING(50) },
    transaction_id: { type: DataTypes.INTEGER },
    transaction_address_id: { type: DataTypes.INTEGER },
    payment_method_id: { type: DataTypes.INTEGER },
    payment_terms: { type: DataTypes.STRING(255) },
    payment_terms_text: { type: DataTypes.TEXT },
    payment_terms_id: { type: DataTypes.INTEGER },
    payment_approval_status: { type: DataTypes.STRING(50) },
    revise_status: { type: DataTypes.STRING(50) },
    approval_status: { type: DataTypes.STRING(50) },
    po_approval_status: { type: DataTypes.STRING(50) },
    order_approval_status: { type: DataTypes.STRING(50) },
    dispatch_status: { type: DataTypes.STRING(50) },
    quotation_status: { type: DataTypes.STRING(50) },
    user_id: { type: DataTypes.INTEGER },
    branch_id: { type: DataTypes.INTEGER },
    company_id: { type: DataTypes.INTEGER },
    status: {
      type: DataTypes.TINYINT,
      defaultValue: 0,
      comment: "0: Active, 1: Inactive, 2: Deleted"
    }
  }, {
    tableName: "quotation",
    timestamps: true,
    underscored: true
  });

  return Quotation;
};
