module.exports = (sequelize, DataTypes) => {
  const QuotationTransaction = sequelize.define("QuotationTransaction", {
    quotation_id: { type: DataTypes.INTEGER },
    category_id: { type: DataTypes.INTEGER },
    product_id: { type: DataTypes.INTEGER },
    product_specification_id: { type: DataTypes.INTEGER },
    formula_id: { type: DataTypes.INTEGER },
    level_id: { type: DataTypes.INTEGER },
    inquiry_type: { type: DataTypes.STRING(100) },
    project_wise: { type: DataTypes.STRING(100) },
    product_description: { type: DataTypes.TEXT },
    product_specification: { type: DataTypes.TEXT },
    other_product_description: { type: DataTypes.TEXT },
    item_class: { type: DataTypes.STRING(100), comment: "If applicable" },
    product_unit_id: { type: DataTypes.INTEGER },
    product_quantity: { type: DataTypes.DECIMAL(12, 3) },
    product_base_unit_id: { type: DataTypes.INTEGER },
    product_base_quantity: { type: DataTypes.DECIMAL(12, 3) },
    product_converted_unit_id: { type: DataTypes.INTEGER },
    product_converted_quantity: { type: DataTypes.DECIMAL(12, 3) },
    unit_wise: { type: DataTypes.STRING(50) },
    product_rate: { type: DataTypes.DECIMAL(12, 2) },
    product_converted_rate: { type: DataTypes.DECIMAL(12, 2) },
    discount_percentage: { type: DataTypes.DECIMAL(5, 2) },
    discount_amount: { type: DataTypes.DECIMAL(12, 2) },
    discount_converted_amount: { type: DataTypes.DECIMAL(12, 2) },
    product_amount: { type: DataTypes.DECIMAL(12, 2) },
    product_converted_amount: { type: DataTypes.DECIMAL(12, 2) },
    cgst_percentage: { type: DataTypes.DECIMAL(5, 2) },
    cgst_rate: { type: DataTypes.DECIMAL(12, 2) },
    cgst_rate_converted: { type: DataTypes.DECIMAL(12, 2) },
    sgst_percentage: { type: DataTypes.DECIMAL(5, 2) },
    sgst_rate: { type: DataTypes.DECIMAL(12, 2) },
    sgst_rate_converted: { type: DataTypes.DECIMAL(12, 2) },
    igst_percentage: { type: DataTypes.DECIMAL(5, 2) },
    igst_rate: { type: DataTypes.DECIMAL(12, 2) },
    igst_rate_converted: { type: DataTypes.DECIMAL(12, 2) },
    product_tax_category_id: { type: DataTypes.INTEGER },
    product_total: { type: DataTypes.DECIMAL(14, 2) },
    product_converted_total: { type: DataTypes.DECIMAL(14, 2) },
    budget_transaction_total: { type: DataTypes.DECIMAL(14, 2) },
    budget_margin_percent: { type: DataTypes.DECIMAL(5, 2) },
    budget_margin_amount: { type: DataTypes.DECIMAL(14, 2) },
    budget_grand_total: { type: DataTypes.DECIMAL(14, 2) },
    with_bom_flag: { type: DataTypes.TINYINT, defaultValue: 0, comment: "0: No, 1: Yes" },
    actual_amount_flag: { type: DataTypes.TINYINT, defaultValue: 0, comment: "0: No, 1: Yes" },
    quotation_transaction_status: { type: DataTypes.STRING(50) },
    invoice_done_status: { type: DataTypes.STRING(50) },
    sales_order_status: { type: DataTypes.STRING(50) },
    currency_id: { type: DataTypes.INTEGER },
    currency_rate: { type: DataTypes.DECIMAL(10, 4) },
    bom_version_id: { type: DataTypes.INTEGER },
    user_id: { type: DataTypes.INTEGER },
    company_id: { type: DataTypes.INTEGER },
    branch_id: { type: DataTypes.INTEGER },
    status: {
      type: DataTypes.TINYINT,
      defaultValue: 0,
      comment: "0: Active, 1: Inactive, 2: Deleted"
    }
  }, {
    tableName: "quotation_transaction",
    timestamps: true,
    underscored: true
  });

  return QuotationTransaction;
};
