module.exports = (sequelize, DataTypes) => {
  const Invoice = sequelize.define(
    "Invoice",
    {
      customer_id: { type: DataTypes.INTEGER },
      series_type_id: { type: DataTypes.INTEGER },
      invoice_no: { type: DataTypes.STRING(200) },
      invoice_date: { type: DataTypes.DATEONLY },
      invoice_due_date: { type: DataTypes.DATEONLY },
      invoice_type: { type: DataTypes.INTEGER, defaultValue: 0, comment: "0.Domestic 1.Export" },
      challan_no: { type: DataTypes.STRING(100) },
      challan_date: { type: DataTypes.DATEONLY },
      order_no: { type: DataTypes.STRING(250) },
      order_date: { type: DataTypes.DATEONLY },
      dispatch_doc_no: { type: DataTypes.TEXT },
      dispatch_date: { type: DataTypes.DATE },
      dispatch_by: { type: DataTypes.STRING(100) },
      vehicle_no: { type: DataTypes.STRING(200) },
      destination: { type: DataTypes.STRING(100) },
      docket_no: { type: DataTypes.STRING(400) },
      enable_consignee: { type: DataTypes.INTEGER, defaultValue: 0 },
      consignee_id: { type: DataTypes.INTEGER, defaultValue: 0 },
      discount: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      discount_per: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      formulaid: { type: DataTypes.INTEGER, defaultValue: 0 },
      round_off: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      basic_total: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      basic_convert_total: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      grand_total: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      grand_convert_total: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      paid_amount: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      due_amount: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      remark: { type: DataTypes.TEXT },
      reverse_charge: { type: DataTypes.INTEGER, defaultValue: 0 },
      tax_id: { type: DataTypes.INTEGER, defaultValue: 0 },
      ref_module_id: { type: DataTypes.INTEGER, defaultValue: 0 },
      ref_id: { type: DataTypes.INTEGER, defaultValue: 0 },
      lr_no: { type: DataTypes.STRING(110) },
      lr_date: { type: DataTypes.DATE },
      enable_transport: { type: DataTypes.TINYINT, defaultValue: 0 },
      transpoter_id: { type: DataTypes.INTEGER, defaultValue: 0 },
      currency_enable: { type: DataTypes.TINYINT, defaultValue: 0 },
      currency_id: { type: DataTypes.INTEGER, defaultValue: 0 },
      currency_rate: { type: DataTypes.DOUBLE(15, 5), defaultValue: 0 },
      enable_ewaybill: { type: DataTypes.TINYINT, defaultValue: 0 },
      eway_bill_no: { type: DataTypes.STRING(200), comment: "E-way Bill number"},
      eway_bill_date: { type: DataTypes.DATE },
      einv_Irn: { type: DataTypes.TEXT },
      einv_AckDate: { type: DataTypes.DATE },
      einv_AckNo: { type: DataTypes.STRING(150) },
      einv_SignedQRCode: { type: DataTypes.TEXT('long') },
      einv_SignedInvoice: { type: DataTypes.TEXT('long') },
      einv_Remarks: { type: DataTypes.TEXT },
      tc_format: { type: DataTypes.INTEGER, defaultValue: 0 },
      terms_type: { type: DataTypes.INTEGER, defaultValue: 0, comment: "0.common term 1.party term 2.salesorder term" },
      payment_status: { type: DataTypes.TINYINT, defaultValue: 0 },
      approve_status: { type: DataTypes.SMALLINT, defaultValue: 0 },
      dispatch_status: { type: DataTypes.INTEGER, defaultValue: 0, comment: "0.Pending 1.Finally done 2.done" },
      user_id: { type: DataTypes.INTEGER },
      branch_id: { type: DataTypes.INTEGER },
      company_id: { type: DataTypes.INTEGER },
      status: {
        type: DataTypes.TINYINT,
        defaultValue: 0,
        comment: "0 = active, 1 = inactive, 2 = deleted",
      },
    },
    {
      tableName: "invoice",
      timestamps: false,
      underscored: true,
    }
  );

  return Invoice;
};